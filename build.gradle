plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.3.+" apply false
}

architectury {
    injectInjectables = false
    minecraft = minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom { silentMojangMappingsLicense() }

    dependencies {
        minecraft "com.mojang:minecraft:${minecraft_version}"
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${minecraft_version}:${mapping_version}@zip")
        }
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: "architectury-plugin"

    archivesBaseName = mod_name
    version = mod_version
    group = maven_group

    repositories {
        mavenCentral()
        maven { url "https://maven.parchmentmc.org" }
        maven {
            url "https://www.cursemaven.com"
            content { includeGroup "curse.maven" }
        }
        maven {
            url "https://api.modrinth.com/maven/"
            content { includeGroup "maven.modrinth" }
        }
    }

    java {
        toolchain.languageVersion = JavaLanguageVersion.of(17)
        withSourcesJar()
    }

    jar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }

        manifest {
            attributes([
                    'Specification-Title'     : mod_name,
                    'Specification-Vendor'    : mod_authors,
                    'Specification-Version'   : project.jar.archiveVersion,
                    'Implementation-Title'    : project.name,
                    'Implementation-Version'  : project.jar.archiveVersion,
                    'Implementation-Vendor'   : mod_authors,
                    'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    'Timestamp'               : System.currentTimeMillis(),
                    'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                    'Built-On-Minecraft'      : minecraft_version
            ])
        }
    }

    processResources {
        filesMatching(['pack.mcmeta', 'fabric.mod.json', 'mods.toml', 'quilt.mod.json', '*.mixins.json']) {
            expand project.properties
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
        options.release = 17
    }

    tasks.withType(GenerateModuleMetadata).configureEach {
        enabled = false
    }
}